name: Clean Storybook from PR

on:
  pull_request:
    branches:
      - main

jobs:
  clean-storybook:
    runs-on: ubuntu-latest
    steps:
      # 1. PR을 보낸 브랜치를 체크아웃.
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      # 2. Node.js 환경을 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 3. Storybook디렉토리 파일을 모두 제거
      - name: Remove Storybook files
        run: |
          rm -rf .storybook
          rm -rf src/stories
          rm -f .github/workflows/storybook-deploy.yml

      # 4. package.json에서 Storybook 의존성을 제거하고 yarn.lock을 업데이트
      - name: Remove Storybook dependencies from package.json
        run: |
          node -e "const fs = require('fs'); const path = 'package.json'; const pkg = JSON.parse(fs.readFileSync(path, 'utf8')); if (pkg.devDependencies) { for (const key in pkg.devDependencies) { if (key.startsWith('@storybook')) { delete pkg.devDependencies[key]; } } } fs.writeFileSync(path, JSON.stringify(pkg, null, 2) + '\n');"
          rm -f yarn.lock
          yarn install --mode update-lockfile

      # 5. 변경사항을 커밋하고 PR 브랜치에 푸시
      - name: Commit and push cleaned files
        uses: stefanzweifel/git-auto-commit-action@v5
        with: 
          commit_message: "chore(automated): Remove Storybook and mock files for merge"
          branch: ${{ github.head_ref }}
          file_pattern: .storybook src/stories src/@mock .github/workflows/storybook-deploy.yml package.json yarn.lock

      # 6. 최종 빌드 테스트를 진행
      - name: Install & Build
        run: |
          yarn install --frozen-lockfile
          yarn build
